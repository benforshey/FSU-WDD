{ _readableState:
{ objectMode: false,
    highWaterMark: 16384,
    buffer: [],
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: true,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: true,
    readableListening: false,
    defaultEncoding: 'utf8',
    ranOut: false,
    awaitDrain: 0,
    readingMore: false,
    decoder: null,
    encoding: null },
    readable: true,
        domain: null,
    _events: {},
    _maxListeners: undefined,
        socket:
    { _connecting: false,
        _hadError: false,
        _handle:
        { fd: 29,
            reading: true,
            owner: [Circular],
            onread: [Function: onread],
            onconnection: null,
                writeQueueSize: 0 },
        _parent: null,
            _host: null,
        _readableState:
        { objectMode: false,
            highWaterMark: 16384,
            buffer: [],
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            defaultEncoding: 'utf8',
            ranOut: false,
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null,
            resumeScheduled: false },
        readable: true,
            domain: null,
        _events:
        { end: [Object],
            finish: [Function: onSocketFinish],
            _socketEnd: [Function: onSocketEnd],
            drain: [Object],
                timeout: [Function],
            error: [Object],
            close: [Object],
            data: [Function: socketOnData] },
        _maxListeners: undefined,
            _writableState:
        { objectMode: false,
            highWaterMark: 16384,
            needDrain: false,
            ending: false,
            ended: false,
            finished: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function],
            writecb: null,
            writelen: 0,
            bufferedRequest: null,
            lastBufferedRequest: null,
            pendingcb: 0,
            prefinished: false,
            errorEmitted: false },
        writable: true,
            allowHalfOpen: true,
        destroyed: false,
        bytesRead: 1672,
        _bytesDispatched: 9513,
        _pendingData: null,
        _pendingEncoding: '',
        server:
        { domain: null,
            _events: [Object],
            _maxListeners: undefined,
            _connections: 3,
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _connectionKey: '4:null:3000' },
        _idleTimeout: 120000,
            _idleNext:
        { _connecting: false,
            _hadError: false,
            _handle: [Object],
            _parent: null,
            _host: null,
            _readableState: [Object],
            readable: true,
            domain: null,
            _events: [Object],
            _maxListeners: undefined,
            _writableState: [Object],
            writable: true,
            allowHalfOpen: true,
            destroyed: false,
            bytesRead: 559,
            _bytesDispatched: 242,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Object],
            _idleTimeout: 120000,
            _idleNext: [Object],
            _idlePrev: [Circular],
            _idleStart: 209253702,
            parser: [Object],
            _paused: false,
            read: [Function],
            _consuming: true,
            _httpMessage: null,
            _peername: [Object] },
        _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
        _idleStart: 209253703,
            parser:
        { '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            _headers: [],
                _url: '',
            socket: [Circular],
            incoming: [Circular],
            maxHeaderPairs: 2000,
            onIncoming: [Function: parserOnIncoming] },
        _paused: false,
            read: [Function],
        _consuming: true,
        _httpMessage:
        { domain: null,
            _events: [Object],
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            writable: true,
            _last: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedHeader: {},
            _hasBody: true,
                _trailer: '',
            finished: false,
            _hangupClose: false,
            _headerSent: false,
            socket: [Circular],
            connection: [Circular],
            _header: null,
            _headers: [Object],
            _headerNames: [Object],
            req: [Circular],
            locals: [Object],
            __onFinished: [Object],
            writeHead: [Function: writeHead],
            end: [Function: end] },
        _peername: { address: '::1', family: 'IPv6', port: 51430 } },
    connection:
    { _connecting: false,
        _hadError: false,
        _handle:
        { fd: 29,
            reading: true,
            owner: [Circular],
            onread: [Function: onread],
            onconnection: null,
                writeQueueSize: 0 },
        _parent: null,
            _host: null,
        _readableState:
        { objectMode: false,
            highWaterMark: 16384,
            buffer: [],
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            defaultEncoding: 'utf8',
            ranOut: false,
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null,
            resumeScheduled: false },
        readable: true,
            domain: null,
        _events:
        { end: [Object],
            finish: [Function: onSocketFinish],
            _socketEnd: [Function: onSocketEnd],
            drain: [Object],
                timeout: [Function],
            error: [Object],
            close: [Object],
            data: [Function: socketOnData] },
        _maxListeners: undefined,
            _writableState:
        { objectMode: false,
            highWaterMark: 16384,
            needDrain: false,
            ending: false,
            ended: false,
            finished: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function],
            writecb: null,
            writelen: 0,
            bufferedRequest: null,
            lastBufferedRequest: null,
            pendingcb: 0,
            prefinished: false,
            errorEmitted: false },
        writable: true,
            allowHalfOpen: true,
        destroyed: false,
        bytesRead: 1672,
        _bytesDispatched: 9513,
        _pendingData: null,
        _pendingEncoding: '',
        server:
        { domain: null,
            _events: [Object],
            _maxListeners: undefined,
            _connections: 3,
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _connectionKey: '4:null:3000' },
        _idleTimeout: 120000,
            _idleNext:
        { _connecting: false,
            _hadError: false,
            _handle: [Object],
            _parent: null,
            _host: null,
            _readableState: [Object],
            readable: true,
            domain: null,
            _events: [Object],
            _maxListeners: undefined,
            _writableState: [Object],
            writable: true,
            allowHalfOpen: true,
            destroyed: false,
            bytesRead: 559,
            _bytesDispatched: 242,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Object],
            _idleTimeout: 120000,
            _idleNext: [Object],
            _idlePrev: [Circular],
            _idleStart: 209253702,
            parser: [Object],
            _paused: false,
            read: [Function],
            _consuming: true,
            _httpMessage: null,
            _peername: [Object] },
        _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
        _idleStart: 209253703,
            parser:
        { '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            _headers: [],
                _url: '',
            socket: [Circular],
            incoming: [Circular],
            maxHeaderPairs: 2000,
            onIncoming: [Function: parserOnIncoming] },
        _paused: false,
            read: [Function],
        _consuming: true,
        _httpMessage:
        { domain: null,
            _events: [Object],
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            writable: true,
            _last: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedHeader: {},
            _hasBody: true,
                _trailer: '',
            finished: false,
            _hangupClose: false,
            _headerSent: false,
            socket: [Circular],
            connection: [Circular],
            _header: null,
            _headers: [Object],
            _headerNames: [Object],
            req: [Circular],
            locals: [Object],
            __onFinished: [Object],
            writeHead: [Function: writeHead],
            end: [Function: end] },
        _peername: { address: '::1', family: 'IPv6', port: 51430 } },
    httpVersionMajor: 1,
        httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers:
    { host: 'localhost:3000',
        connection: 'keep-alive',
        'cache-control': 'max-age=0',
        'if-none-match': 'W/"ib8OSZ+fdVHqR6thI378vA=="',
        purpose: 'prefetch',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.124 Safari/537.36',
        accept: '*/*',
        referer: 'http://localhost:3000/46',
        'accept-encoding': 'gzip, deflate, sdch',
        'accept-language': 'en-US,en;q=0.8',
        cookie: 'web_catechism.session=s%3AlFoWckoQ2NU4k7fvp_2KnSZgRAMTgppy.mtTcZK5VmPJKqxiWykVphgln9sIFQV0VPrYL%2FzzlmQQ' },
    rawHeaders:
        [ 'Host',
            'localhost:3000',
            'Connection',
            'keep-alive',
            'Cache-Control',
            'max-age=0',
            'If-None-Match',
            'W/"ib8OSZ+fdVHqR6thI378vA=="',
            'Purpose',
            'prefetch',
            'User-Agent',
            'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.124 Safari/537.36',
            'Accept',
            '*/*',
            'Referer',
            'http://localhost:3000/46',
            'Accept-Encoding',
            'gzip, deflate, sdch',
            'Accept-Language',
            'en-US,en;q=0.8',
            'Cookie',
            'web_catechism.session=s%3AlFoWckoQ2NU4k7fvp_2KnSZgRAMTgppy.mtTcZK5VmPJKqxiWykVphgln9sIFQV0VPrYL%2FzzlmQQ' ],
            trailers: {},
    rawTrailers: [],
        _pendings: [],
    _pendingIndex: 0,
    upgrade: false,
    url: '/47',
    method: 'GET',
    statusCode: null,
    statusMessage: null,
    client:
    { _connecting: false,
        _hadError: false,
        _handle:
        { fd: 29,
            reading: true,
            owner: [Circular],
            onread: [Function: onread],
            onconnection: null,
                writeQueueSize: 0 },
        _parent: null,
            _host: null,
        _readableState:
        { objectMode: false,
            highWaterMark: 16384,
            buffer: [],
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            defaultEncoding: 'utf8',
            ranOut: false,
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null,
            resumeScheduled: false },
        readable: true,
            domain: null,
        _events:
        { end: [Object],
            finish: [Function: onSocketFinish],
            _socketEnd: [Function: onSocketEnd],
            drain: [Object],
                timeout: [Function],
            error: [Object],
            close: [Object],
            data: [Function: socketOnData] },
        _maxListeners: undefined,
            _writableState:
        { objectMode: false,
            highWaterMark: 16384,
            needDrain: false,
            ending: false,
            ended: false,
            finished: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function],
            writecb: null,
            writelen: 0,
            bufferedRequest: null,
            lastBufferedRequest: null,
            pendingcb: 0,
            prefinished: false,
            errorEmitted: false },
        writable: true,
            allowHalfOpen: true,
        destroyed: false,
        bytesRead: 1672,
        _bytesDispatched: 9513,
        _pendingData: null,
        _pendingEncoding: '',
        server:
        { domain: null,
            _events: [Object],
            _maxListeners: undefined,
            _connections: 3,
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _connectionKey: '4:null:3000' },
        _idleTimeout: 120000,
            _idleNext:
        { _connecting: false,
            _hadError: false,
            _handle: [Object],
            _parent: null,
            _host: null,
            _readableState: [Object],
            readable: true,
            domain: null,
            _events: [Object],
            _maxListeners: undefined,
            _writableState: [Object],
            writable: true,
            allowHalfOpen: true,
            destroyed: false,
            bytesRead: 559,
            _bytesDispatched: 242,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Object],
            _idleTimeout: 120000,
            _idleNext: [Object],
            _idlePrev: [Circular],
            _idleStart: 209253702,
            parser: [Object],
            _paused: false,
            read: [Function],
            _consuming: true,
            _httpMessage: null,
            _peername: [Object] },
        _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
        _idleStart: 209253703,
            parser:
        { '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            _headers: [],
                _url: '',
            socket: [Circular],
            incoming: [Circular],
            maxHeaderPairs: 2000,
            onIncoming: [Function: parserOnIncoming] },
        _paused: false,
            read: [Function],
        _consuming: true,
        _httpMessage:
        { domain: null,
            _events: [Object],
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            writable: true,
            _last: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedHeader: {},
            _hasBody: true,
                _trailer: '',
            finished: false,
            _hangupClose: false,
            _headerSent: false,
            socket: [Circular],
            connection: [Circular],
            _header: null,
            _headers: [Object],
            _headerNames: [Object],
            req: [Circular],
            locals: [Object],
            __onFinished: [Object],
            writeHead: [Function: writeHead],
            end: [Function: end] },
        _peername: { address: '::1', family: 'IPv6', port: 51430 } },
    _consuming: false,
        _dumped: false,
    next: [Function: next],
    baseUrl: '',
        originalUrl: '/47',
    _parsedUrl:
    { protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/47',
        path: '/47',
        href: '/47',
        _raw: '/47' },
    params: { path: '47' },
    query: {},
    res:
    { domain: null,
        _events:
        { prefinish: [Function: resOnFinish],
            end: [Function: onevent],
            finish: [Function: onevent] },
        _maxListeners: undefined,
            output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _hasBody: true,
            _trailer: '',
        finished: false,
        _hangupClose: false,
        _headerSent: false,
        socket:
        { _connecting: false,
            _hadError: false,
            _handle: [Object],
            _parent: null,
            _host: null,
            _readableState: [Object],
            readable: true,
            domain: null,
            _events: [Object],
            _maxListeners: undefined,
            _writableState: [Object],
            writable: true,
            allowHalfOpen: true,
            destroyed: false,
            bytesRead: 1672,
            _bytesDispatched: 9513,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Object],
            _idleTimeout: 120000,
            _idleNext: [Object],
            _idlePrev: [Object],
            _idleStart: 209253703,
            parser: [Object],
            _paused: false,
            read: [Function],
            _consuming: true,
            _httpMessage: [Circular],
            _peername: [Object] },
        connection:
        { _connecting: false,
            _hadError: false,
            _handle: [Object],
            _parent: null,
            _host: null,
            _readableState: [Object],
            readable: true,
            domain: null,
            _events: [Object],
            _maxListeners: undefined,
            _writableState: [Object],
            writable: true,
            allowHalfOpen: true,
            destroyed: false,
            bytesRead: 1672,
            _bytesDispatched: 9513,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Object],
            _idleTimeout: 120000,
            _idleNext: [Object],
            _idlePrev: [Object],
            _idleStart: 209253703,
            parser: [Object],
            _paused: false,
            read: [Function],
            _consuming: true,
            _httpMessage: [Circular],
            _peername: [Object] },
        _header: null,
            _headers: { 'x-powered-by': 'Express' },
        _headerNames: { 'x-powered-by': 'X-Powered-By' },
        req: [Circular],
            locals: { messages: [Function], user: null },
        __onFinished: { [Function: listener] queue: [Object] },
        writeHead: [Function: writeHead],
        end: [Function: end] },
    _startAt: [ 209253, 703731365 ],
        _startTime: Thu Jun 18 2015 09:05:07 GMT-0700 (PDT),
    _remoteAddress: '::1',
    body: {},
    _parsedOriginalUrl:
    { protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/47',
        path: '/47',
        href: '/47',
        _raw: '/47' },
    sessionStore:
    { sessions: { lFoWckoQ2NU4k7fvp_2KnSZgRAMTgppy: '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{},"flash":{}}' },
        generate: [Function],
            _events: { disconnect: [Function], connect: [Function] } },
    sessionID: 'lFoWckoQ2NU4k7fvp_2KnSZgRAMTgppy',
        session:
    { cookie:
    { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
        passport: {},
        flash: {} },
    _passport:
    { instance:
    { _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
            strategies: [Object] },
        session: {} },
    updateParam: [Function],
        check: [Function],
    checkFiles: [Function],
    checkBody: [Function],
    checkParams: [Function],
    checkQuery: [Function],
    checkHeader: [Function],
    onValidationError: [Function],
    validationErrors: [Function],
    filter: [Function],
    sanitize: [Function],
    assert: [Function],
    validate: [Function],
    secret: undefined,
    cookies: { 'web_catechism.session': 's:lFoWckoQ2NU4k7fvp_2KnSZgRAMTgppy.mtTcZK5VmPJKqxiWykVphgln9sIFQV0VPrYL/zzlmQQ' },
    signedCookies: {},
    flash: [Function: _flash],
    route: { path: '/:path', stack: [ [Object] ], methods: { get: true } } }